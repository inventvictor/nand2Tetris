// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel[0..2]=address, a=aa, b=bb, c=cc, d=dd, e=ee, f=ff, g=gg, h=hh);
    Register(in[0..15]=in, load=aa, out[0..15]=out0);
    Register(in[0..15]=in, load=bb, out[0..15]=out1);
    Register(in[0..15]=in, load=cc, out[0..15]=out2);
    Register(in[0..15]=in, load=dd, out[0..15]=out3);
    Register(in[0..15]=in, load=ee, out[0..15]=out4);
    Register(in[0..15]=in, load=ff, out[0..15]=out5);
    Register(in[0..15]=in, load=gg, out[0..15]=out6);
    Register(in[0..15]=in, load=hh, out[0..15]=out7);
    Mux8Way16(a[0..15]=out0, b[0..15]=out1, c[0..15]=out2, d[0..15]=out3, e[0..15]=out4, f[0..15]=out5, g[0..15]=out6, h[0..15]=out7, sel[0..2]=address, 
    out[0..15]=out);

}